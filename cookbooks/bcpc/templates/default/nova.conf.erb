################################################
#
#              Generated by Chef
#
################################################

[DEFAULT]

# MySQL Connection
sql_connection=mysql://<%=get_config('mysql-nova-user')%>:<%=get_config('mysql-nova-password')%>@<%=node['bcpc']['management']['vip']%>/<%=node['bcpc']['dbname']['nova']%>
sql_idle_timeout=3600

# Rabbit message queue settings
rabbit_host=<%=node['bcpc']['management']['vip']%>
rabbit_password=<%=get_config('rabbitmq-password')%>
rabbit_ha_queues=False
rabbit_durable_queues=False

# If using qpid...
#rpc_backend=nova.openstack.common.rpc.impl_qpid
#qpid_hostname=<%=node['bcpc']['management']['vip']%>
#qpid_username=admin
#qpid_password=<%=get_config('rabbitmq-password')%>

# Nova API settings
auth_strategy=keystone
api_paste_config=/etc/nova/api-paste.ini
s3_host=<%=node['bcpc']['management']['vip']%>
ec2_listen=<%= node['bcpc']['management']['ip'] %>
ec2_host=<%=node['bcpc']['management']['vip']%>
osapi_compute_listen=<%= node['bcpc']['management']['ip'] %>
metadata_listen=127.0.0.1
<% if @servers.include?(node) -%>
enabled_apis=ec2,osapi_compute,metadata
<% else -%>
enabled_apis=metadata
<% end %>
<% if not node['bcpc']['vms_key'].nil? %>
osapi_compute_extension=nova.api.openstack.compute.contrib.standard_extensions
osapi_compute_extension=cobalt.nova.osapi.cobalt_extension.Cobalt_extension
<% end %>

# Nova Scheduler
scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler
ram_allocation_ratio=<%=node['bcpc']['nova']['ram_allocation_ratio']%>
reserved_host_memory_mb=<%=node['bcpc']['nova']['reserved_host_memory_mb']%>
cpu_allocation_ratio=<%=node['bcpc']['nova']['cpu_allocation_ratio']%>

# Neutron settings
network_api_class=nova.network.neutronv2.api.API
libvirt_vif_driver = nova_contrail_vif.contrailvif.VRouterVIFDriver
neutron_ca_certificates_file = /etc/ssl/certs/ssl-bcpc.pem
neutron_admin_auth_url = <%=node['bcpc']['protocol']['keystone']%>://<%=node['bcpc']['management']['vip']%>:5000/v2.0/
neutron_admin_tenant_name = <%=node['bcpc']['admin_tenant']%>
neutron_admin_username = <%=get_config('keystone-admin-user')%>
neutron_admin_password = <%=get_config('keystone-admin-password')%>
neutron_url = <%=node['bcpc']['protocol']['neutron']%>://<%=node['bcpc']['management']['vip']%>:9696
service_neutron_metadata_proxy = true
neutron_metadata_proxy_shared_secret = <%=get_config('contrail-metadata-secret')%>
default_availability_zone=<%=node['bcpc']['region_name']%>

# Nova Compute settings
connection_type=libvirt
libvirt_type=<%=node['bcpc']['virt_type']%>
libvirt_use_virtio_for_bridges=True
use_cow_images=True
#snapshot_image_format=qcow2
#start_guests_on_host_boot=True
#resume_guests_state_on_host_boot=True

# Nova Volume settings
volume_api_class=nova.volume.cinder.API

# Always boot nova VMs from RBD
libvirt_images_type=rbd
libvirt_images_rbd_pool=<%=node['bcpc']['ceph']['images']['name']%>
libvirt_images_rbd_ceph_conf=/etc/ceph/ceph.conf
rbd_user=admin
rbd_secret_uuid=<%=get_config('libvirt-secret-uuid')%>
# do not allow libvirt to try to inject into the local partition
libvirt_inject_password=false
libvirt_inject_key=false
libvirt_inject_partition=-2
# Set flags for libvirt live migration
libvirt_live_migration_flag="VIR_MIGRATE_UNDEFINE_SOURCE,VIR_MIGRATE_PEER2PEER,VIR_MIGRATE_LIVE,VIR_MIGRATE_PERSIST_DEST"

# Nova VNC settings
ssl_only=True
key=/etc/nova/ssl-bcpc.key
cert=/etc/nova/ssl-bcpc.pem
novnc_enabled=True
novncproxy_base_url=https://<%=node['bcpc']['management']['ip']%>:6080/vnc_auto.html
vncserver_proxyclient_address=127.0.0.1
novncproxy_host=<%=node['bcpc']['management']['ip']%>
memcached_servers=<%=node['bcpc']['management']['vip']%>:11211

# Glance settings
image_service=nova.image.glance.GlanceImageService
glance_api_servers=<%=node['bcpc']['protocol']['glance']%>://<%=node['bcpc']['management']['vip']%>:9292
glance_api_insecure=True

# Cloudpipe
vpn_image_id=<%=get_config('glance-cloudpipe-uuid')%>
use_project_ca=True
cnt_vpn_clients=5

# Ceilometer metrics
#instance_usage_audit=True
#instance_usage_audit_period=hour
#notify_on_state_change=vm_and_task_state
#notification_driver=nova.openstack.common.notifier.rpc_notifier
#notification_driver=ceilometer.compute.nova_notifier

# Misc other settings
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/
rootwrap_config=/etc/nova/rootwrap.conf
verbose=False
debug=False
ec2_private_dns_show_ip=True
#default_log_levels="amqplib=DEBUG,sqlalchemy=DEBUG,boto=WARN,suds=INFO,eventlet.wsgi.server=WARN"
#rpc_response_timeout=120

ca_file = /etc/ssl/certs/ssl-bcpc.pem
cinder_ca_certificates_file = /etc/ssl/certs/ssl-bcpc.pem

[ssl]
ca_file = /etc/ssl/certs/ssl-bcpc.pem

# Keystone settings
[keystone_authtoken]
cafile = /etc/ssl/certs/ssl-bcpc.pem
auth_uri = <%=node['bcpc']['protocol']['keystone']%>://<%=node['bcpc']['management']['vip']%>:5000/v2.0/
auth_host = <%=node['bcpc']['management']['vip']%>
auth_port = 35357
auth_protocol = <%=node['bcpc']['protocol']['keystone']%>
auth_version = v2.0
admin_tenant_name = <%=node['bcpc']['admin_tenant']%>
admin_user = <%=get_config('keystone-admin-user')%>
admin_password = <%=get_config('keystone-admin-password')%>
admin_token = <%=get_config('keystone-admin-token')%>
signing_dir = /var/lib/nova
