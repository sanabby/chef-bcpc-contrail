#!/usr/bin/env python

import requests
import json

headers = {'content-type': 'application/json'}

login_api = {
    "jsonrpc": "2.0", "method": "user.login",
    "params": {
      "user": "<%=get_config('zabbix-admin-user')%>",
      "password": "<%=get_config('zabbix-admin-password')%>"
    },
    "id": 1 }

status = requests.post("https://<%=node['bcpc']['management']['vip']%>:7777/api_jsonrpc.php", data=json.dumps(login_api), verify=False, headers=headers)
api_login = status.json()['result']

exists_api = {
   "jsonrpc": "2.0",
   "method": "action.exists",
   "params": {
     "name": "Auto registration BCPC servers."
   },
   "auth": api_login,
   "id": 1 }

status = requests.post("https://<%=node['bcpc']['management']['vip']%>:7777/api_jsonrpc.php", data=json.dumps(exists_api), verify=False, headers=headers)

if not status.json()['result']:
  create_api = {
     "jsonrpc": "2.0",
     "method": "action.create",
     "params": {
       "name": "Auto registration BCPC servers.",
       "eventsource": 2,
       "status": 0,
       "esc_period": 0,
       "evaltype": 0,
       "operations": [
         {
           "esc_step_from": 1,
           "esc_period": 0,
           "optemplate": [ { "templateid": "10001" } ],
           "operationtype": 6,
           "esc_step_to": 1
         },
         {
           "esc_step_from": 1,
           "esc_period": 0,
           "opgroup": [ { "operationid": "1", "groupid": "5" } ],
           "operationtype": 4,
           "esc_step_to": 1
         }
       ]
     },
     "auth": api_login,
     "id": 1
   }
  status = requests.post("https://<%=node['bcpc']['management']['vip']%>:7777/api_jsonrpc.php", data=json.dumps(create_api), verify=False, headers=headers)
