################################################
#
#              Generated by Chef
#
################################################

global
  daemon
  user haproxy
  group haproxy
  pidfile /var/run/haproxy.pid
  stats socket /var/run/haproxy/haproxy.asok level admin
  log /dev/log local0 info
  maxconn 8000

defaults
  log global
  source <%=node['bcpc']['management']['monitoring']['vip']%>
  mode http
  option http-server-close
  option abortonclose
  option tcplog
  option dontlognull
  option nolinger
  option redispatch
  retries 3
  timeout http-request 10s
  timeout queue 1m
  timeout connect 5s
  timeout check 10s
  timeout client 30m
  timeout server 30m

listen mysql-galera <%=node['bcpc']['management']['monitoring']['vip']%>:3306
  timeout client 24h
  timeout server 24h
  mode tcp
  balance leastconn
  option tcplog
  option tcpka
  option httpchk
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:3306 check port 3307 inter 5s rise 1 fall 1 observe layer4" %>
<% end -%>

frontend https
  bind <%=node['bcpc']['management']['monitoring']['vip']%>:443 ssl crt /etc/haproxy/haproxy.pem
  option tcplog
  stats enable
  stats uri /haproxy
  stats hide-version
  stats realm Haproxy\ Statistics
  stats auth <%=get_config('haproxy-stats-user')%>:<%=get_config('haproxy-stats-password')%>
  reqadd X-Forwarded-Protocol:\ https
  acl url_kibana path_beg /kibana
  use_backend kibana-backend if url_kibana
  acl url_elasticsearch path_beg /elasticsearch
  use_backend elasticsearch-backend if url_elasticsearch

backend graphite-web-backend
  balance source
  option httpchk GET /composer/
  http-check expect status 200
  reqrep ^([^\ :]*)\ /graphite/(.*) \1\ /\2
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:8888 check inter 5s rise 1 fall 1" %>
<% end -%>

backend kibana-backend
  balance source
  option httpchk GET /
  http-check expect status 200
  reqrep ^([^\ :]*)\ /kibana/(.*) \1\ /\2
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:5601 check inter 5s rise 1 fall 1" %>
<% end -%>

backend elasticsearch-backend
  balance source
  option httpchk GET /
  http-check expect status 200
  reqrep ^([^\ :]*)\ /elasticsearch/(.*) \1\ /\2
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:9200 check inter 5s rise 1 fall 1" %>
<% end -%>

# This is temporary until graphite supports being served under /graphite
frontend graphite-web
  bind <%="#{node['bcpc']['management']['monitoring']['vip']}:8888"%> ssl crt /etc/haproxy/haproxy.pem
  option tcplog
  default_backend graphite-web-backend

listen graphite-carbon-relay-line <%=node['bcpc']['management']['monitoring']['vip']%>:2013
  mode tcp
  balance leastconn
  option tcplog
  option tcpka
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:2013 check inter 5s rise 1 fall 1 observe layer4" %>
<% end -%>

listen graphite-carbon-relay-pickle <%=node['bcpc']['management']['monitoring']['vip']%>:2014
  mode tcp
  balance leastconn
  option tcplog
  option tcpka
<% @servers.each do |server| -%>
  <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:2014 check inter 5s rise 1 fall 1 observe layer4" %>
<% end -%>

listen elasticsearch <%=node['bcpc']['management']['monitoring']['vip']%>:9200
  balance source
  option tcplog
  option httpchk GET /
  http-check expect status 200
<% @servers.each do |server| -%>
 <%= "server #{server['hostname']} #{server['bcpc']['management']['ip']}:9200 check inter 5s rise 1 fall 1" %>
<% end -%>
